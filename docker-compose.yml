version: '3.10'
services:
  web:
    restart: always
    build:
      context: ./notifications
      dockerfile: ./Dockerfile
    command: bash -c 
      "python manage.py migrate && gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    env_file:
      - ./notifications/core/.env
    depends_on:
      - redis
      - postgres
    volumes:
      - static:/Notifications/notifications/staticfiles
      - media:/Notifications/notifications/mediafiles
  postgres:
    container_name: postgres_container
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: on-failure
    env_file:
      - ./notifications/core/.env
  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - web
    volumes:
      - static:/notifications/staticfiles
      - media:/notifications/mediafiles
  redis:
    image: redis:alpine
    restart: always
    command: redis-server
  celery:
    build: ./notifications
    command: bash -c
      "python -m celery -A core worker -l info"
    depends_on:
      - redis
  celery-beat:
    restart: on-failure
    build: ./notifications
    command: bash -c
      "python -m celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - web
      - postgres
      - redis
    env_file:
      - ./notifications/core/.env
volumes:
  static:
  media: